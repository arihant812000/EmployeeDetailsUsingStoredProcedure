//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmpApiEntityFramework.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class employeedatainfoEntities : DbContext
    {
        public employeedatainfoEntities()
            : base("name=employeedatainfoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<EmployeeAddress> EmployeeAddresses { get; set; }
        public virtual DbSet<employeeDetail> employeeDetails { get; set; }
    
        public virtual int AddEmployee(string employee)
        {
            var employeeParameter = employee != null ?
                new ObjectParameter("employee", employee) :
                new ObjectParameter("employee", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmployee", employeeParameter);
        }
    
        public virtual int deleteEmp(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteEmp", idParameter);
        }
    
        public virtual int EditEmployee(Nullable<int> id, string employee)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var employeeParameter = employee != null ?
                new ObjectParameter("employee", employee) :
                new ObjectParameter("employee", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditEmployee", idParameter, employeeParameter);
        }
    
        public virtual ObjectResult<EmployeeAddress> getAdress(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeAddress>("getAdress", idParameter);
        }
    
        public virtual ObjectResult<EmployeeAddress> getAdress(Nullable<int> id, MergeOption mergeOption)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeAddress>("getAdress", mergeOption, idParameter);
        }
    
        public virtual ObjectResult<employeeDetail> getAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<employeeDetail>("getAll");
        }
    
        public virtual ObjectResult<employeeDetail> getAll(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<employeeDetail>("getAll", mergeOption);
        }
    }
}
